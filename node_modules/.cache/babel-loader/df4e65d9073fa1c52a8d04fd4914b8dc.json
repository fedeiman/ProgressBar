{"ast":null,"code":"var _jsxFileName = \"/home/federico/Desktop/progress-bar/src/ProgessBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './ProgressBar.css';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProgressBar = () => {\n  _s();\n\n  const [percentage, setPercentage] = useState(0);\n  const [start, setStart] = useState(false);\n  const [reset, setReset] = useState(false);\n  useEffect(() => {\n    if (start) {\n      if (percentage < 100) setTimeout(() => setPercentage(percentage + 100 / 15), 500);\n    }\n\n    if (reset) {\n      setPercentage(0);\n      setStart(false);\n    }\n  }, [percentage, start, reset]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"MainTitle\",\n      children: \" Progress Bar \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Progress, {\n      percentage: percentage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setStart(true);\n          setReset(false);\n        },\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setStart(false);\n        },\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setReset(true),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProgressBar, \"PeNg7WdJQcX7Dos+L0REr7fNFq8=\");\n\n_c = ProgressBar;\n\nconst Filler = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filler\",\n    style: {\n      width: `${props.percentage}%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n};\n\n_c2 = Filler;\nexport default ProgressBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProgressBar\");\n$RefreshReg$(_c2, \"Filler\");","map":{"version":3,"sources":["/home/federico/Desktop/progress-bar/src/ProgessBar.js"],"names":["React","useState","useEffect","Button","ProgressBar","percentage","setPercentage","start","setStart","reset","setReset","setTimeout","marginTop","Filler","props","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGK,KAAH,EAAU;AACN,UAAGF,UAAU,GAAG,GAAhB,EACAM,UAAU,CAAC,MAAML,aAAa,CAACD,UAAU,GAAI,MAAI,EAAnB,CAApB,EAA6C,GAA7C,CAAV;AACH;;AACD,QAAGI,KAAH,EAAU;AACNH,MAAAA,aAAa,CAAC,CAAD,CAAb;AACAE,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;AACJ,GATQ,EASN,CAACH,UAAD,EAAYE,KAAZ,EAAkBE,KAAlB,CATM,CAAT;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEJ;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAK,MAAA,KAAK,EAAE;AAAEO,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,8BACD,QAAC,MAAD;AACK,QAAA,OAAO,EAAE,MAAI;AAACJ,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACVE,UAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,SAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,eAQD,QAAC,MAAD;AACK,QAAA,OAAO,EAAE,MAAI;AACTF,UAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,SAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARC,eAeD,QAAC,MAAD;AACK,QAAA,OAAO,EAAE,MAAIE,QAAQ,CAAC,IAAD,CAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfC;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CA9CD;;GAAMN,W;;KAAAA,W;;AAiDJ,MAAMS,MAAM,GAAIC,KAAD,IAAW;AACxB,sBAAO;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAG,GAAED,KAAK,CAACT,UAAW;AAA7B;AAA/B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;MAAMQ,M;AAKR,eAAeT,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ProgressBar.css';\nimport Button from '@material-ui/core/Button';\n\n\nconst ProgressBar = () => {\n\n    const [percentage, setPercentage] = useState(0)\n    const [start, setStart] = useState(false)\n    const [reset, setReset] = useState(false)\n\n    useEffect(() => {\n        if(start) {\n            if(percentage < 100)  \n            setTimeout(() => setPercentage(percentage + (100/15)), 500);\n        }\n        if(reset) {\n            setPercentage(0)\n            setStart(false)\n        }\n    }, [percentage,start,reset]);\n    \n\n    return (\n        <div className=\"MainDiv\">  \n            <h1 className=\"MainTitle\" > Progress Bar </h1>\n            <Progress percentage={percentage} />\n            \n            <div style={{ marginTop: '20px' }}>  \n           <Button\n                onClick={()=>{setStart(true)\n                    setReset(false)\n                }}\n           >\n               Start\n           </Button>\n           <Button\n                onClick={()=>{\n                    setStart(false)\n                }}\n           >\n               Stop\n           </Button>\n           <Button\n                onClick={()=>setReset(true)}\n           >\n               Reset\n           </Button>\n            </div>   \n        </div>\n    ) \n}\n  \n  \n  const Filler = (props) => {\n    return <div className=\"filler\" style={{ width: `${props.percentage}%` }} />\n  }\n  \n \nexport default ProgressBar;\n"]},"metadata":{},"sourceType":"module"}