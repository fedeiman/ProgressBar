{"ast":null,"code":"var _jsxFileName = \"/home/federico/Desktop/progress-bar/src/ProgessBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport './ProgressBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProgressBar = () => {\n  _s();\n\n  const [percentage, setPercentage] = useState(0);\n  const [boxPercentage, setBoxPercentage] = useState(0);\n  const [start, setStart] = useState(false);\n  const [reset, setReset] = useState(false);\n  const [change, setChange] = useState(true);\n  useEffect(() => {\n    if (start) {\n      if (percentage < 100) {\n        setTimeout(() => setPercentage(percentage + 100 / 15), 500);\n        setTimeout(() => setBoxPercentage(boxPercentage + 1), 500);\n      }\n    }\n\n    if (reset) {\n      setPercentage(0);\n      setBoxPercentage(0);\n      setStart(false);\n    }\n  }, [percentage, start, reset, boxPercentage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"MainTitle\",\n      children: \" Progress Bar \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Progress, {\n      percentage: percentage,\n      change: change,\n      boxPercentage: boxPercentage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setStart(true);\n          setReset(false);\n        },\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setStart(false),\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setReset(true),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setChange(!change),\n      children: \"Change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProgressBar, \"6UTuDUC53YyHsj/IOAjMakB63nw=\");\n\n_c = ProgressBar;\n\nconst Progress = props => {\n  const defaultProps = {\n    bgcolor: 'background.paper',\n    m: 1,\n    border: 1,\n    style: {\n      width: '1rem',\n      height: '1rem'\n    }\n  };\n  let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.change ? /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      children: arr.map((item, index) => /*#__PURE__*/_jsxDEV(Box, {\n        borderColor: \"text.primary\",\n        ...defaultProps,\n        bgcolor: props.boxPercentage >= index + 1 && \"#81c784\"\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(Filler, {\n        percentage: props.percentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = Progress;\n\nconst Filler = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filler\",\n    style: {\n      width: `${props.percentage}%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 12\n  }, this);\n};\n\n_c3 = Filler;\nexport default ProgressBar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProgressBar\");\n$RefreshReg$(_c2, \"Progress\");\n$RefreshReg$(_c3, \"Filler\");","map":{"version":3,"sources":["/home/federico/Desktop/progress-bar/src/ProgessBar.js"],"names":["React","useState","useEffect","Button","Box","ProgressBar","percentage","setPercentage","boxPercentage","setBoxPercentage","start","setStart","reset","setReset","change","setChange","setTimeout","Progress","props","defaultProps","bgcolor","m","border","style","width","height","arr","map","item","index","Filler"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport './ProgressBar.css';\n\n\n\nconst ProgressBar = () => {\n\n    const [percentage, setPercentage] = useState(0);\n    const [boxPercentage, setBoxPercentage] = useState(0);\n    const [start, setStart] = useState(false);\n    const [reset, setReset] = useState(false);\n    const [change, setChange] = useState(true);\n\n    useEffect(() => {\n        if(start) {\n            if(percentage < 100) { \n                setTimeout(() => setPercentage(percentage + (100/15) ), 500);\n                setTimeout(() => setBoxPercentage(boxPercentage + 1 ), 500);\n            }\n        }\n        if(reset) {\n            setPercentage(0);\n            setBoxPercentage(0);\n            setStart(false);\n        }\n    }, [percentage,start,reset,boxPercentage]);\n    \n\n    return (\n        <div className=\"MainDiv\">  \n            <h1 className=\"MainTitle\" > Progress Bar </h1>\n            <Progress percentage={percentage} change={change} boxPercentage={boxPercentage} />\n            <div>  \n                <Button\n                    onClick={()=>{\n                        setStart(true);\n                        setReset(false);\n                    }}\n                >\n                    Start\n                </Button>\n                <Button\n                    onClick={()=>setStart(false)}\n                >\n                    Stop\n                </Button>\n                <Button\n                    onClick={()=>setReset(true)}\n                >\n                    Reset\n                </Button>\n            </div>\n            <Button\n                onClick={()=>setChange(!change)}\n            >\n                Change\n            </Button>   \n        </div>\n    ) \n}\n  \nconst Progress = (props) => {\n\n    const defaultProps = {\n        bgcolor: 'background.paper',\n        m: 1,\n        border: 1,\n        style: { width: '1rem', height: '1rem' },\n      };\n\n      let arr = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];\n\n    return (\n        <>\n        {props.change ? \n        <Box display=\"flex\" justifyContent=\"center\">\n            {\n                arr.map((item,index) => \n                <Box key={item} borderColor=\"text.primary\" {...defaultProps} \n                    bgcolor={props.boxPercentage >= index + 1  && \"#81c784\" }/> \n                )\n            }\n        </Box> \n        :         \n        <div className=\"progress-bar\">\n            <Filler percentage={props.percentage} />\n        </div>\n        }\n        </>\n      )\n  }\n  \n  const Filler = (props) => {\n    return <div className=\"filler\" style={{ width: `${props.percentage}%` }} />\n  }\n  \n \nexport default ProgressBar;\n"]},"metadata":{},"sourceType":"module"}