{"ast":null,"code":"var _jsxFileName = \"/home/federico/Desktop/progress-bar/src/ProgessBar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// import React, { useState, useEffect } from 'react';\n// import './ProgressBar.css';\n// const ProgressBar = () => {\n//     const [percentage, setPercentage] = useState(0)\n//     useEffect(() => {\n//         if(percentage === 100) return  \n//         setInterval(() => setPercentage(100/15), 500);\n//     }, [percentage]);\n//     const timer = () => {\n//       if(percentage === 100) return \n//       this.setState(prevState => ({ percentage: prevState.percentage + (100/15) }))\n//     }\n//     return (\n//         <div>  \n//             <h2> A React Progress Bar </h2>\n//             <Progress percentage={percentage} />\n//             <div style={{ marginTop: '20px' }}>  \n//             {/* <button \n//                 onClick={this.nextStep}\n//                 >\n//                 Next Step\n//             </button>   */}\n//             </div>   \n//             <div style={{marginTop: '10px', color: 'blue', marginBottom: '15px'}} onClick={() => this.setState({ percentage: 0 })}>\n//             Reset\n//             </div>\n//         </div>\n//     ) \n// }\n//   const Progress = (props) => {\n//     return (\n//         <div className=\"progress-bar\">\n//           <Filler percentage={props.percentage} />\n//         </div>\n//       )\n//   }\n//   const Filler = (props) => {\n//     return <div className=\"filler\" style={{ width: `${props.percentage}%` }} />\n//   }\n// //   ReactDOM.render(\n// //     <ProgressBarExample />,\n// //     document.querySelector('#app')\n// //   )\n// export default ProgressBar;\nconst ProgressBar = props => {\n  const {\n    bgcolor,\n    completed\n  } = props;\n  const containerStyles = {\n    height: 20,\n    width: '100%',\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 50,\n    margin: 50\n  };\n  const fillerStyles = {\n    height: '100%',\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: 'inherit',\n    textAlign: 'right'\n  };\n  const labelStyles = {\n    padding: 5,\n    color: 'white',\n    fontWeight: 'bold'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyles,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: fillerStyles,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: labelStyles,\n        children: `${completed}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }, this);\n};\n\n_c = ProgressBar;\nconst testData = [{\n  bgcolor: \"#6a1b9a\",\n  completed: 60\n}, {\n  bgcolor: \"#00695c\",\n  completed: 30\n}, {\n  bgcolor: \"#ef6c00\",\n  completed: 53\n}];\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: testData.map((item, idx) => /*#__PURE__*/_jsxDEV(ProgressBar, {\n      bgcolor: item.bgcolor,\n      completed: item.completed\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 7\n  }, this);\n}\n\n_c2 = App;\nexport default ProgressBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProgressBar\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/federico/Desktop/progress-bar/src/ProgessBar.js"],"names":["ProgressBar","props","bgcolor","completed","containerStyles","height","width","backgroundColor","borderRadius","margin","fillerStyles","textAlign","labelStyles","padding","color","fontWeight","testData","App","map","item","idx"],"mappings":";;;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA,MAAMA,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAyBF,KAA/B;AAEA,QAAMG,eAAe,GAAG;AACtBC,IAAAA,MAAM,EAAE,EADc;AAEtBC,IAAAA,KAAK,EAAE,MAFe;AAGtBC,IAAAA,eAAe,EAAE,SAHK;AAItBC,IAAAA,YAAY,EAAE,EAJQ;AAKtBC,IAAAA,MAAM,EAAE;AALc,GAAxB;AAQA,QAAMC,YAAY,GAAG;AACnBL,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,KAAK,EAAG,GAAEH,SAAU,GAFD;AAGnBI,IAAAA,eAAe,EAAEL,OAHE;AAInBM,IAAAA,YAAY,EAAE,SAJK;AAKnBG,IAAAA,SAAS,EAAE;AALQ,GAArB;AAQA,QAAMC,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAE,CADS;AAElBC,IAAAA,KAAK,EAAE,OAFW;AAGlBC,IAAAA,UAAU,EAAE;AAHM,GAApB;AAMA,sBACE;AAAK,IAAA,KAAK,EAAEX,eAAZ;AAAA,2BACE;AAAK,MAAA,KAAK,EAAEM,YAAZ;AAAA,6BACE;AAAM,QAAA,KAAK,EAAEE,WAAb;AAAA,kBAA4B,GAAET,SAAU;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhCH;;KAAMH,W;AAkCJ,MAAMgB,QAAQ,GAAG,CACf;AAAEd,EAAAA,OAAO,EAAE,SAAX;AAAsBC,EAAAA,SAAS,EAAE;AAAjC,CADe,EAEf;AAAED,EAAAA,OAAO,EAAE,SAAX;AAAsBC,EAAAA,SAAS,EAAE;AAAjC,CAFe,EAGf;AAAED,EAAAA,OAAO,EAAE,SAAX;AAAsBC,EAAAA,SAAS,EAAE;AAAjC,CAHe,CAAjB;;AAMA,SAASc,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGD,QAAQ,CAACE,GAAT,CAAa,CAACC,IAAD,EAAOC,GAAP,kBACZ,QAAC,WAAD;AAAuB,MAAA,OAAO,EAAED,IAAI,CAACjB,OAArC;AAA8C,MAAA,SAAS,EAAEiB,IAAI,CAAChB;AAA9D,OAAkBiB,GAAlB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;MARQH,G;AAWT,eAAejB,WAAf","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './ProgressBar.css';\n\n// const ProgressBar = () => {\n\n//     const [percentage, setPercentage] = useState(0)\n\n//     useEffect(() => {\n//         if(percentage === 100) return  \n//         setInterval(() => setPercentage(100/15), 500);\n//     }, [percentage]);\n\n//     const timer = () => {\n//       if(percentage === 100) return \n//       this.setState(prevState => ({ percentage: prevState.percentage + (100/15) }))\n//     }\n    \n//     return (\n//         <div>  \n//             <h2> A React Progress Bar </h2>\n//             <Progress percentage={percentage} />\n            \n//             <div style={{ marginTop: '20px' }}>  \n//             {/* <button \n//                 onClick={this.nextStep}\n//                 >\n//                 Next Step\n//             </button>   */}\n//             </div>   \n            \n//             <div style={{marginTop: '10px', color: 'blue', marginBottom: '15px'}} onClick={() => this.setState({ percentage: 0 })}>\n//             Reset\n//             </div>\n//         </div>\n//     ) \n// }\n  \n//   const Progress = (props) => {\n//     return (\n//         <div className=\"progress-bar\">\n//           <Filler percentage={props.percentage} />\n//         </div>\n//       )\n//   }\n  \n//   const Filler = (props) => {\n//     return <div className=\"filler\" style={{ width: `${props.percentage}%` }} />\n//   }\n  \n// //   ReactDOM.render(\n// //     <ProgressBarExample />,\n// //     document.querySelector('#app')\n// //   )\n  \n// export default ProgressBar;\nconst ProgressBar = (props) => {\n    const { bgcolor, completed } = props;\n  \n    const containerStyles = {\n      height: 20,\n      width: '100%',\n      backgroundColor: \"#e0e0de\",\n      borderRadius: 50,\n      margin: 50\n    }\n  \n    const fillerStyles = {\n      height: '100%',\n      width: `${completed}%`,\n      backgroundColor: bgcolor,\n      borderRadius: 'inherit',\n      textAlign: 'right'\n    }\n  \n    const labelStyles = {\n      padding: 5,\n      color: 'white',\n      fontWeight: 'bold'\n    }\n  \n    return (\n      <div style={containerStyles}>\n        <div style={fillerStyles}>\n          <span style={labelStyles}>{`${completed}%`}</span>\n        </div>\n      </div>\n    );\n  };\n\n  const testData = [\n    { bgcolor: \"#6a1b9a\", completed: 60 },\n    { bgcolor: \"#00695c\", completed: 30 },\n    { bgcolor: \"#ef6c00\", completed: 53 },\n  ];\n  \n  function App() {\n    return (\n      <div className=\"App\">\n        {testData.map((item, idx) => (\n          <ProgressBar key={idx} bgcolor={item.bgcolor} completed={item.completed} />\n        ))}\n      </div>\n    );\n  }\n  \n  \n  export default ProgressBar;"]},"metadata":{},"sourceType":"module"}